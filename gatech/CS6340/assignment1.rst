Assignment 1 Resources
======================

Tutorials
---------

* https://samiux.blogspot.com/2013/06/howto-cert-basic-fuzzing-framework-bff.html


Needs to be done
----------------

pnmnorm1.yaml file

The campaign file (named pnmnorm1.yaml) you created to run the first successful fuzzing campaign on pnmnorm. 5.0 pts

pnmnorm1_uniquelog.txt file

A single file named pnmnorm1_uniquelog.txt that is the uniquelog.txt file generated by BFF for your first successful fuzzing campaign targeting pnmnorm. 5.0 pts

pnmnorm1.* input file

The minimized input file named pnmnorm1.ppm or pnmnorm1.pgm (the extension will vary depending on which seed file causes the crash) that caused a failure in your first successful fuzzing campaign on pnmnorm.
5.0 pts

pnmnorm2.yaml file

The campaign file (named pnmnorm2.yaml) you created to run the second successful fuzzing campaign on pnmnorm.
5.0 pts

pnmnorm2_uniquelog.txt file

A single file named pnmnorm2_uniquelog.txt that is the uniquelog.txt file generated by BFF for your second successful fuzzing campaign targeting pnmnorm.
5.0 pts

pnmnorm2.* input file
The minimized input file named pnmnorm2.ppm or pnmnorm2.pgm (the extension will vary depending on which seed file causes the crash) that caused a failure in your second successful fuzzing campaign on pnmnorm.
5.0 pts

salarycalc.yaml file
The campaign file (named salarycalc.yaml​ ) you created to run the fuzzing campaign you felt most effective for finding failing test cases in salarycalc​.
5.0 pts

salarycalc_uniquelog.txt file
A single file named salarycalc_uniquelog.txt combining the uniquelog.txt files generated by the BFF for all fuzzing campaigns targeting the salarycalc​ application.
5.0 pts

salarycalc.cpp file
The fixed salarycalc.cpp file that was fixed and validated against the existing seed files. This file will be compiled and given various input files, including but not limited to the provided seed files, to ensure existing program functionality and to ensure known bugs are fixed.
60.0 pts


Study Material
==============


Making Real Programs Explode - A Simple Application of Random Testing
http://pages.cs.wisc.edu/~bart/fuzz/fuzz-revisited-talk.pdf


A Randomized Scheduler with Probabilistic Guarantees of Finding Bugs

https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/paper-83.pdf